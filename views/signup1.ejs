<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>회원가입</title>
    <link
      rel="shortcut icon"
      type="image/x-icon"
      href="https://cdn-icons-png.flaticon.com/512/1395/1395020.png"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
  </head>

  <body>
    <div class="container">
      <%- include('./static/topBar') %>

      <link rel="stylesheet" href="/public/css/signup1.css" />
      <form name="register" enctype="multipart/form-data">
        <div class="left">
          <span id="signup1_title"> 회원가입 </span>
          <div id="imagePreview">
            <img id="preview" src="" style="border-radius: 10px" />
          </div>

          <input
            type="file"
            id="imageInput"
            accept="image/*"
            style="display: none"
            onchange="previewImage(this)"
          />

          <button
            type="button"
            class="ImgButton"
            onclick="document.getElementById('imageInput').click()"
          >
            이미지 선택
          </button>

          <div class="top">
            <div class="idBox">
              <img src="/public/img/id.svg" style="margin-right: 15px" />
              <input
                type="text"
                name="id"
                id="id"
                class="id"
                placeholder="아이디"
              />
              <button
                style="width: 102px; font-size: 10px"
                type="button"
                class="emailsubmit"
                id="checkId"
                onclick="checkID()"
              >
                아이디 검증
              </button>
            </div>
            <div class="pwBox">
              <img src="/public/img/pw.svg" style="margin-right: 15px" />
              <input
                type="password"
                name="pw"
                id="pw"
                class="pw"
                placeholder="비밀번호"
              />
            </div>
            <div class="pwCheckBox">
              <img src="/public/img/pw.svg" style="margin-right: 15px" />
              <input
                type="password"
                name="pwCheck"
                id="pwCheck"
                class="pwCheck"
                placeholder="비밀번호 확인"
              />
            </div>
            <br />
          </div>
        </div>
        <div class="bottom">
          <div class="nameBox">
            <img src="/public/img/id.svg" style="margin-right: 15px" />
            <input
              type="text"
              name="name"
              id="name"
              class="name"
              placeholder="이름"
            />
          </div>
          <div class="birthBox">
            <img src="/public/img/birth.svg" style="margin-right: 15px" />
            <input
              type="date"
              name="birth"
              id="birth"
              class="birth"
              placeholder="생년월일"
              max="<?php echo date('Y-m-d'); ?>"
            />
          </div>
          <div class="gender">
            <input
              type="radio"
              name="gender"
              id="man"
              class="man"
              value="남자"
            />
            <label for="man" id="manLabel">남자</label>
            <input
              type="radio"
              name="gender"
              id="woman"
              class="woman"
              value="여자"
            />
            <label for="woman" id="womanLabel">여자</label>
          </div>
          <div class="phoneBox">
            <img src="/public/img/phone.svg" style="margin-right: 15px" />
            <input
              type="number"
              name="phone_number"
              id="phone_number"
              class="phoneNumber"
              placeholder="휴대전화 번호"
            />
          </div>
          <div class="emailBox">
            <form id="emailForm">
              <img
                src="/public/img/email.svg"
                class="emailImg"
                style="margin-right: 15px"
              />
              <input
                type="email"
                id="email"
                class="email"
                placeholder="이메일"
              />

              <button
                type="button"
                class="emailsubmit"
                onclick="sendEmailVerification()"
              >
                전송
              </button>
            </form>
          </div>
          <div class="emailCheckBox">
            <img
              src="/public/img/cancel.svg"
              class="emailCheckImg"
              id="emailCheckImg"
              style="margin-right: 15px"
            />
            <input
              type="number"
              id="emailCheck"
              class="emailCheck"
              placeholder="인증번호"
            />
            <button
              type="button"
              class="emailCheckSubmit"
              onclick="emailCheckSubmit()"
            >
              확인
            </button>
          </div>

          <!-- 주소 입력 -->
          <div class="selectedAddress">
            <div id="popup" class="popup">
              <div class="popup-content">
                <span class="close-button" id="closeButton">&times;</span>
                <input
                  type="text"
                  id="sample4_postcode"
                  placeholder="우편번호"
                />
                <input
                  type="button"
                  onclick="sample4_execDaumPostcode()"
                  value="우편번호 찾기"
                /><br />
                <input
                  type="text"
                  id="sample4_roadAddress"
                  placeholder="도로명주소"
                />

                <span id="guide" style="color: #999; display: none"></span>
                <input
                  type="text"
                  id="sample4_detailAddress"
                  placeholder="상세주소"
                />
                <button type="button" id="submitAddress">확인</button>
              </div>
            </div>
            <img
              src="/public/img/map.svg"
              class="addressImg"
              style="margin-right: 15px"
            />
            <input
              type="text"
              placeholder="주소"
              id="displayAddress"
              readonly
              class="displayAddress"
            />
            <button type="button" id="popupButton" class="popupButton">
              입력
            </button>
          </div>
        </div>

        <button
          type="button"
          id="nextButton"
          class="nextButton"
          onclick="registerFunc()"
        >
          가입하기
        </button>
      </form>
    </div>
  </body>
  <script>
    //이메일 인증하기
    async function sendEmailVerification(event) {
      const emailInput = document.getElementById("email");
      const emailSubmitButton = document.querySelector(".emailsubmit");
      const email = emailInput.value;
      //유효성 검사
      if (!isValidEmail(email)) {
        alert("올바른 이메일 주소를 입력하세요.");
        return;
      } else {
        const res = await axios.post("signup/EmailAuthentication", {
          email: email,
        });
        alert("인증번호를 이메일로 발송하였습니다.");
        console.log("payload", res.data.payload);
        savedPayload = res.data.payload;
      }
    }
    // 간단한 이메일 유효성 검사 함수
    function isValidEmail(email) {
      const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
      return emailPattern.test(email);
    }
    //인증번호 체크
    function emailCheckSubmit(payload) {
      const emailCheck = document.getElementById("emailCheck").value;
      const emailCheckImg = document.getElementById("emailCheckImg");
      console.log("이메일 체크", savedPayload);
      if (emailCheck === savedPayload) {
        alert("본인 인증을 완료하였습니다.");
        sessionStorage.setItem("emailCheck", true);
        emailCheckImg.src = "/public/img/check.svg";
      } else {
        alert("인증번호가 틀립니다.");
      }
    }

    // 이미지 미리보기
    function previewImage(input) {
      const preview = document.getElementById("preview");
      const imagePreview = document.getElementById("imagePreview");

      if (input.files && input.files[0]) {
        const reader = new FileReader();
        console.log("이미지 미리보기 실행");

        reader.onload = function (e) {
          // 선택한 이미지를 미리보기로 표시합니다.
          preview.src = e.target.result;
          imagePreview.style.backgroundColor = "transparent"; // 빈 원의 배경색을 투명하게 설정합니다.
        };

        reader.readAsDataURL(input.files[0]);
      } else {
        // 이미지를 선택하지 않았을 때 빈 원을 원래대로 채웁니다.
        imagePreview.style.backgroundColor = "#ccc";
        preview.src = ""; // 이미지 미리보기 초기화
      }
    }
    // 성별 라디오
    const manRadio = document.getElementById("man");
    const womanRadio = document.getElementById("woman");
    const manLabel = document.querySelector('label[for="man"]');
    const womanLabel = document.querySelector('label[for="woman"]');

    manRadio.addEventListener("change", function () {
      if (manRadio.checked) {
        manLabel.classList.add("man-selected");
        womanLabel.classList.remove("woman-selected");
        console.log("man checked");
      } else {
        manLabel.classList.remove("man-selected");
      }
    });

    womanRadio.addEventListener("change", function () {
      if (womanRadio.checked) {
        womanLabel.classList.add("woman-selected");
        manLabel.classList.remove("man-selected");
        console.log("woman checked");
      } else {
        womanLabel.classList.remove("woman-selected");
      }
    });

    // 다음 버튼
    // document
    //   .getElementById("nextButton")
    //   .addEventListener("click", function () {
    //     window.location.href = "/signup2"; // 페이지 이동
    //   });

    // 업로드 이미지
    async function uploadImage() {
      const imageInput = document.getElementById("imageInput");
      const selectedImage = imageInput.files[0];
      console.log(selectedImage);
      if (selectedImage) {
        try {
          const formData = new FormData();
          formData.append("image", selectedImage);

          // const res = await axios({
          //   method: "post",
          //   url: "/upload",
          //   data: formData,
          // }).then((res) => {});

          // 이미지를 업로드할 엔드포인트로 POST 요청 보내기
          const res = await axios.post("signup/upload", formData, {
            headers: {
              "Content-Type": "multipart/form-data", // FormData를 사용할 때 필요한 헤더
            },
          });
          console.log(res.data.file.location);
          const imgURL = res.data.file.location;
          console.log(imgURL);
          return imgURL;

          alert("이미지 업로드가 완료되었습니다.");
        } catch (error) {
          console.error("이미지 업로드 중 오류 발생:", error);
        }
      } else {
        alert("이미지를 선택해주세요.");
      }
    }

    // server
    async function registerFunc() {
      const form = document.forms["register"];
      const emailCheck = sessionStorage.getItem("emailCheck");
      console.log("id", form.id.value);
      console.log("pw", form.pw.value);
      console.log("name", form.name.value);
      console.log("gender", form.gender.value);
      console.log("phone_number", form.phone_number.value);
      console.log("birth", form.birth.value);
      console.log("email", form.email.value);
      console.log("location", document.getElementById("displayAddress").value);
      console.log("image", document.getElementById("imageInput").files[0]);
      // const imageUrl =
      console.log(form.gender.value);
      //회원가입 조건 분류
      if (form.pw.value !== form.pwCheck.value) {
        alert("비밀번호가 서로 다릅니다.");
      } else if (
        form.id.value === "" ||
        form.pw.value === "" ||
        form.name.value === "" ||
        form.gender.value === "" ||
        form.phone_number.value === "" ||
        form.birth.value === ""
      ) {
        alert("필수항목을 다 입력해주세요.");
      } else if (!emailCheck || emailCheck !== "true") {
        alert("본인 인증을 해주세요.");
      } else {
        try {
          const imgURL = await uploadImage();
          console.log(imgURL);
          const res = await axios({
            method: "POST",
            url: "/signup",
            data: {
              id: form.id.value,
              pw: form.pw.value,
              name: form.name.value,
              gender: form.gender.value,
              phone_number: form.phone_number.value,
              birth: form.birth.value,
              email: form.email.value,
              location: document.getElementById("displayAddress").value,
              // image: document.getElementById("imageInput").files[0],
              imgURL,
            },
          });
          console.log(res);
          await uploadImage();
          if (res.data) {
            console.log(res.data);
            alert("관심사 선택 페이지로 넘어갑니다.");
            sessionStorage.setItem("token_signup", res.data.token_signup);
            window.location.href = "/signupHobby";
            // document.location.href = "/signin";
          }
        } catch (err) {
          console.log(err);
        }
      }
    }

    // 주소 입력
    // 버튼과 팝업 요소 가져오기
    const popupButton = document.getElementById("popupButton");
    const popup = document.getElementById("popup");
    const closeButton = document.getElementById("closeButton");
    const topBar = document.querySelector(".topBar");

    // 버튼 클릭 시 팝업 열기
    popupButton.addEventListener("click", () => {
      popup.style.display = "block";
      topBar.style.position = "static";
      topBar.style.backgroundColor = "transparent"; // 먼저 배경색을 투명하게 설정합니다.
      topBar.style.zIndex = "1"; // z-index를 설정하여 topBar가 다른 콘텐츠 위에 나타나도록 합니다.
    });

    // 확인 버튼 클릭 시 팝업 닫기
    const submitAddress = document.querySelector("#submitAddress");
    const displayAddress = document.querySelector("#displayAddress");
    // 1. input에 입력된 데이터 보여주기
    submitAddress.addEventListener("click", () => {
      popup.style.display = "none";
      topBar.style.position = "fixed"; // topBar의 position을 다시 relative로 설정합니다.
      topBar.style.zIndex = "0"; // 기본적으로 다른 콘텐츠 아래에 나타나도록 설정합니다.

      // 입력 받은 데이터 input 태그에 추가
      displayAddress.value =
        document.getElementById("sample4_roadAddress").value +
        " " +
        document.getElementById("sample4_detailAddress").value;
    });
    // 2. 입력 값 db에 넣기
    // close 버튼 클릭 시 팝ㄷ업 닫기
    closeButton.addEventListener("click", () => {
      popup.style.display = "none";
      topBar.style.position = "fixed"; // topBar의 position을 다시 relative로 설정합니다.
      topBar.style.zIndex = "0"; // 기본적으로 다른 콘텐츠 아래에 나타나도록 설정합니다.
    });

    // 팝업 외부 클릭 시 팝업 닫기
    window.addEventListener("click", (event) => {
      if (event.target === popup) {
        popup.style.display = "none";
        topBar.style.position = "fixed"; // topBar의 position을 다시 relative로 설정합니다.
        topBar.style.zIndex = "0"; // 기본적으로 다른 콘텐츠 아래에 나타나도록 설정합니다.
      }
    });

    // 지도 api
    function sample4_execDaumPostcode() {
      new daum.Postcode({
        oncomplete: function (data) {
          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

          // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
          var roadAddr = data.roadAddress; // 도로명 주소 변수
          var extraRoadAddr = ""; // 참고 항목 변수

          // 법정동명이 있을 경우 추가한다. (법정리는 제외)
          // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
          if (data.bname !== "" && /[동|로|가]$/g.test(data.bname)) {
            extraRoadAddr += data.bname;
          }
          // 건물명이 있고, 공동주택일 경우 추가한다.
          if (data.buildingName !== "" && data.apartment === "Y") {
            extraRoadAddr +=
              extraRoadAddr !== ""
                ? ", " + data.buildingName
                : data.buildingName;
          }

          // 우편번호와 주소 정보를 해당 필드에 넣는다.
          document.getElementById("sample4_postcode").value = data.zonecode;
          document.getElementById("sample4_roadAddress").value =
            roadAddr + `(${data.bname})`;

          var guideTextBox = document.getElementById("guide");
          // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
          if (data.autoRoadAddress) {
            var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
            guideTextBox.innerHTML = "(예상 도로명 주소 : " + expRoadAddr + ")";
            guideTextBox.style.display = "block";
          } else if (data.autoJibunAddress) {
            var expJibunAddr = data.autoJibunAddress;
            guideTextBox.innerHTML = "(예상 지번 주소 : " + expJibunAddr + ")";
            guideTextBox.style.display = "block";
          } else {
            guideTextBox.innerHTML = "";
            guideTextBox.style.display = "none";
          }
        },
      }).open();
    }

    let idFlag = false;

    async function checkID() {
      const id = document.querySelector("#id").value;
      const data = await axios({
        method: "POST",
        url: "/signup/checkId",
        data: {
          id: id,
        },
      });
      if (data.data.result) {
        alert("사용할 수 있는 아이디입니다.");
        document.querySelector("#checkId").idFlag = true;
      } else {
        alert("중복된 아이디가 있습니다.");
      }
    }
    //-------------날짜 선택 제한---------------//
    var now_utc = Date.now(); //지금 날짜를 밀리초로
    //getTimezoneoffset()은 현재 시간과의 차이를 분 단위로 반환
    var timeOff = new Date().getTimezoneOffset() * 6000; //분단위를 밀리초로 반환
    //new Date(now_utc-timeoff).toISOString()은 '0000-00-00T00:00:00.00Z'를 반환
    var today = new Date(now_utc - timeOff).toISOString().split("T")[0];
    document.getElementById("birth").setAttribute("max", today);
  </script>
</html>
